; Options for the GCC PL/I.
; Copyright 2002, 2003-2004 Henrik Sorensen
;
; This file is part of GCC front-end for the PL/I programming language, GCC PL/I.
;
; GCC PL/I is free software; you can redistribute it and/or modify it under
; the terms of the GNU General Public License as published by the Free
; Software Foundation; version 2.
;
; GCC PL/I is distributed in the hope that it will be useful, but WITHOUT ANY
; WARRANTY; without even the implied warranty of MERCHANTABILITY or
; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
; for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC PL/I; see the file COPYING.  If not, write to the Free
; Software Foundation, 59 Temple Place - Suite 330, Boston, MA
; 02111-1307, USA.

; See c.opt for a description of this file's format.
; This file is processed by the script opts.sh.  It is a database of
; command line options, with each record separated by a blank line,
; and each field appearing on its own line.  The first field is the
; command-line switch with the leading "-" removed.  All options
; beginning with "f" or "W" are implicitly assumed to take a "no-"
; form; this form should not be listed.  If you do not want this
; negative form and you want it to be automatically rejected, add
; RejectNegative to the second field.

; The second field is a space-separated list of which parts of the
; compiler recognize the switch, as declared by "Language" entries.
; If the switch takes an argument, then you should also specify
; "Joined" and/or "Separate" to indicate where the argument can
; appear.  If a Joined argument can legitimately be omitted, specify
; "JoinedOrMissing" instead of "Joined".  If the argument to a switch
; is a non-negative integer, you can specify "UInteger" and the switch
; decoder will convert the argument for you, or complain to the user
; if the argument is invalid.

; The third field is the help text to output with --help.  This is
; automatically line-wrapped on output.  Normally the switch is output
; automatically, with the help text on the right hand side of the
; output.  However, if the help text contains a tab character, the
; text to the left of the tab is output instead of the switch, and the
; text to its right forms the help.  This is useful for elaborating on
; what type of argument a switch takes, for example.  If the second
; field contains "Undocumented" then nothing is output with --help.
; Only do this with good reason like the switch being internal between
; the driver and the front end - it is not an excuse to leave a switch
; undocumented.

; Comments can appear on their own line anwhere in the file, preceded
; by a semicolon.  Whitespace is permitted before the semicolon.

; For each switch XXX below, an enumeration constant is created by the
; script opts.sh spelt OPT_XXX, but with all non-alphanumeric
; characters replaced with an underscore.

; Please try to keep this file in ASCII collating order.

Language
PL1

pp-only
PL1
Do preprocessing only.

I
PL1
List of directories to search for %include members

flexer-trace
PL1
Trace lexical analysis

flisting-xml
PL1 
Produce listing file in XML format

fparser-trace
PL1
Trace the parsing process

isuffix
PL1 JoinedOrMissing
Optional suffix to add to include files

v
PL1
Version number shown in standard output

y
PL1
Enable trace from both lexical analysis and parsing process

; This comment is to ensure we retain the blank line above.
