	TITLE	D:\DEV\PROJECT\OOPLI\ALPHA001\cdog.pli
	.386
	.387
CEL1	SEGMENT DWORD USE32 PUBLIC 'CEL_CLASS'
CEL1	ENDS
CEL2	SEGMENT DWORD USE32 PUBLIC 'CEL_CLASS'
CEL2	ENDS
CEL3	SEGMENT DWORD USE32 PUBLIC 'CEL_CLASS'
CEL3	ENDS
CEL4	SEGMENT DWORD USE32 PUBLIC 'CEL_CLASS'
CEL4	ENDS
CEECODE	SEGMENT DWORD USE32 PUBLIC 'CODE'
CEECODE	ENDS
DATA32	SEGMENT DWORD USE32 PUBLIC 'DATA'
DATA32	ENDS
CONST32	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST32	ENDS
BSS32	SEGMENT DWORD USE32 PUBLIC 'BSS'
BSS32	ENDS
DGROUP	GROUP CONST32, BSS32, DATA32
	ASSUME	CS:FLAT, DS:FLAT, SS:FLAT, ES:FLAT
	EXTRN	_CEESTART:PROC
	EXTRN	_IBMPERFO:PROC
	EXTRN	_IBMPPGDC:PROC
	EXTRN	_IBMPBCCA:PROC
	EXTRN	CANIMAL:PROC
	EXTRN	_CEERTX:PROC
	EXTRN	_IBMPESGU:PROC
	EXTRN	_CEEUTX:PROC
	EXTRN	IBMBERPL:PROC
	EXTRN	_IBMPEDXT:PROC
	EXTRN	IBMBOFC1:BYTE
	EXTRN	PLILCB:BYTE
DATA32	SEGMENT
@6c_Pfo_SYSPRINT	DD OFFSET FLAT:@6d_Anchor_SYSPRINT
	DB "B@D",0H
	DB 01H,0aeH,0a3H,0H
	DD OFFSET FLAT:@CONSf
	DD 0H
	DB 04H DUP (00H)
@6d_Anchor_SYSPRINT	DD OFFSET FLAT:IBMBOFC1
@61OOPLIMETHODCOUNT	DD 04H
@62OOPLICLASSCOUNT	DD 02H
@7e_Sib	DD -028H
	DB 0H,010H,0H,0H
	DB "n;",0ffH,0c0H
@7f_Sib	DD -028H
	DB 0H,010H,0H,0H
	DB "n;",0ffH,0c0H
@52_UNNAMED82	DD OFFSET FLAT:_IBMPEDXT
	DD	PLILCB
DATA32	ENDS
BSS32	SEGMENT
	ALIGN 04H
COMM	@1ePENTRYSTRUCT:DWORD
	ALIGN 04H
COMM	@39OOPLIMETHODTABLE:BYTE:0200H
	ALIGN 04H
COMM	@48OOPLICLASSTABLE:BYTE:0a8H
BSS32	ENDS
CONST32	SEGMENT
@CONS1	DB 02H,02H,0H,0H
@CONS2	DB 08H,0H
@CONS3	DB "ANIMAL"
@CONS4	DB "Wuff!"
@CONS5	DB "<"
@CONS6	DB ">"
@CONS7	DB "CANIMAL"
@CONS8	DB "@B"
@CONS9	DB "< >"
@CONSa	DB 0H,02H,01fH,080H
@CONSb	DB "could not find method >"
@CONSc	DB "< in class >"
@CONSd	DB "DOG"
@CONSe	DB "SETSOUND"
@CONSf	DB 08H,0H,"SYSPRINT"
@CONS10	DB "CDOG"
@CONS11	DB "SPEAK"
@6bSYSPRINT	DD OFFSET FLAT:@6c_Pfo_SYSPRINT
@2b_Dsc0000000001	DB 02H,02H,0H,0H,05H,0H,0H,0H
@22_Dsc0000000002	DB 02H,04H,0H,0H,"#",0H,0H,0H
CONST32	ENDS
CEECODE	SEGMENT

;***** 1  /*0*/ CDOG: PROC(className, memberName) RETURNS(PTR);
	ALIGN 04H

	PUBLIC CDOG
CDOG	PROC
	PUSH	EBP
	MOV	EBP,ESP
	SUB	ESP,010H
	MOV	[EBP+08H],EAX;	_@CLASSNAME
	MOV	[EBP+0cH],EDX;	_@MEMBERNAME
	MOV	[EBP+010H],ECX;	_@desc_List

;***** 12  IF pEntryStruct = NULL() THEN
	CMP	DWORD PTR  @1ePENTRYSTRUCT,0H
	JNE	SHORT FELB18
FELB19:

;***** 13   ALLOCATE entryStruct SET(pEntryStruct);
	MOV	EAX,010H
	CALL	_IBMPPGDC
	MOV	DWORD PTR  @1ePENTRYSTRUCT,EAX
FELB18:
FELB20:

;***** 2  /*0*/ DCL (className, memberName) VAR CHAR(35);
;***** 3  /*2*/ 
;***** 4  /*0*/ DCL 1 Animal  BASED
;***** 5  /*0*/ ,   2 MYSOUND CHAR ( 10 ) INIT ( '(SILENCE)' )
;***** 6  /*0*/ ;
;***** 7  /*0*/ DCL CANIMAL EXT ENTRY(VAR CHAR(35), VAR CHAR(35)) RETURNS(PTR);
;***** 8  /*0*/ DCL 1 Dog  BASED
;***** 9  /*0*/ ;
;***** 10  /*19*/ 
;***** 11  /*0*/ DOGSPEAK: PROC(this) ;
;***** 12  /*0*/ DCL this PTR;
;***** 13  /*0*/ DCL varThis PTR INIT(this);
;***** 14  /*0*/ DO WHILE(varThis->varStruct.className ^= 'DOG');
;***** 15  /*0*/   varThis = varThis->varStruct.pNext;
;***** 16  /*0*/ END;
;***** 17  /*24*/ CALL
;***** 18  /*0*/ CANIMAL('ANIMAL',
;***** 19  /*0*/ 'SETSOUND')->entryStruct.callEntry(
;***** 20  /*0*/ (THIS)
;***** 21  /*0*/ ,'Wuff!'
;***** 22  /*0*/ )
;***** 23  /*24*/ ;
;***** 24  /*25*/ CALL
;***** 25  /*0*/ CANIMAL('ANIMAL',
;***** 26  /*0*/ 'SPEAK')->entryStruct.callEntry(
;***** 27  /*0*/ (THIS)
;***** 28  /*0*/ )
;***** 29  /*25*/ ;
;***** 30  /*26*/ END;
;***** 31  /*27*/ 
;***** 32  /*0*/ DOGCDOG: PROC(this);
;***** 33  /*0*/ DCL this PTR;
;***** 34  /*0*/ DCL varThis PTR;
;***** 35  /*0*/ varThis = this;
;***** 36  /*0*/ DO WHILE(varThis->varStruct.pNext ^= NULL());
;***** 37  /*0*/  varThis = varThis->varStruct.pNext;
;***** 38  /*0*/ END;
;***** 39  /*0*/ IF varThis->varStruct.className ^= 'DOG' THEN
;***** 40  /*0*/ DO;
;***** 41  /*0*/  ALLOCATE varStruct SET (varThis->varStruct.pNext);
;***** 42  /*0*/  varThis = varThis->varStruct.pNext;
;***** 43  /*0*/ END;
;***** 44  /*0*/ ALLOCATE DOG SET ( varThis->varStruct.varMem);
;***** 45  /*0*/ varThis->varStruct.pNext = NULL();
;***** 46  /*0*/ varThis->varStruct.className = 'DOG';
;***** 47  /*0*/ varThis->varStruct.superClassName = 'ANIMAL';
;***** 48  /*0*/ varThis->varStruct.pNext = NULL();
;***** 49  /*0*/ CALL
;***** 50  /*0*/ CANIMAL('ANIMAL',
;***** 51  /*0*/ 'CANIMAL')->entryStruct.callEntry(
;***** 52  /*0*/ (THIS)
;***** 53  /*0*/ )
;***** 54  /*0*/ ;
;***** 55  /*0*/ END;
;***** 56  /*0*/ DCL 1 oopliMethodTable(4) STATIC,
;***** 57  /*0*/    2 className      VAR CHAR(35),
;***** 58  /*0*/    2 superClassName VAR CHAR(35),
;***** 59  /*0*/    2 methodName     VAR CHAR(35),
;***** 60  /*0*/    2 functionCall BIT(1),
;***** 61  /*0*/    2 methodCallEntry  ENTRY,
;***** 62  /*0*/    2 methodFuncEntry  ENTRY RETURNS(PTR);
;***** 63  /*0*/ DCL oopliMethodCount BIN FIXED(31) INIT(4) STATIC;
;***** 64  /*0*/ DCL 1 oopliClassTable(2) STATIC,
;***** 65  /*0*/      2 className    VAR CHAR(35),
;***** 66  /*0*/      2 superClassName VAR CHAR(35),
;***** 67  /*0*/      2 fExternal BIT(1),
;***** 68  /*0*/      2 classEntry ENTRY(VAR CHAR(35), VAR CHAR(35)) RETURNS(PTR);
;***** 69  /*0*/ DCL oopliClassCount BIN FIXED(31) INIT(2) STATIC;
;***** 70  /*0*/ SetupMethodTable: PROC;
;***** 71  /*0*/ oopliMethodTable(1).className='DOG';
;***** 72  /*0*/ oopliMethodTable(1).superClassName='ANIMAL';
;***** 73  /*0*/ oopliMethodTable(1).methodName='SPEAK';
;***** 74  /*0*/ oopliMethodTable(1).methodCallEntry= DOGSPEAK;
;***** 75  /*0*/ oopliMethodTable(1).functionCall= '0'B;
;***** 76  /*0*/ oopliMethodTable(2).className='DOG';
;***** 77  /*0*/ oopliMethodTable(2).superClassName='ANIMAL';
;***** 78  /*0*/ oopliMethodTable(2).methodName='CDOG';
;***** 79  /*0*/ oopliMethodTable(2).methodCallEntry= DOGCDOG;
;***** 80  /*0*/ oopliMethodTable(2).functionCall= '0'B;
;***** 81  /*0*/ oopliClassTable(1).className='ANIMAL';
;***** 82  /*0*/ oopliClassTable(1).superClassName='';
;***** 83  /*0*/ oopliClassTable(1).fExternal = '1'B;
;***** 84  /*0*/ oopliClassTable(1).classEntry = CANIMAL;
;***** 85  /*0*/ oopliClassTable(2).className='DOG';
;***** 86  /*0*/ oopliClassTable(2).superClassName='ANIMAL';
;***** 87  /*0*/ oopliClassTable(2).fExternal = '0'B;
;***** 88  /*0*/ END;
;***** 89  /*0*/ %INCLUDE OOPLIRES;
;***** 90  /*0*/ CALL SetupMethodTable;
	PUSH	EBP
	CALL	SETUPMETHODTABLE
	ADD	ESP,04H

;***** 91  /*0*/ RETURN(OOPLIResolve(className, memberName));
	MOV	DWORD PTR [EBP-08H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED32
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED32
	PUSH	EBP
	LEA	ECX,[EBP-08H];	_UNNAMED32
	MOV	EDX,[EBP+0cH];	_@MEMBERNAME
	MOV	EAX,[EBP+08H];	_@CLASSNAME
	SUB	ESP,0cH
	CALL	OOPLIRESOLVE
	ADD	ESP,010H
	MOV	[EBP-0cH],EAX;	@CBE22
	JMP	SHORT FELB21
	ALIGN 04H

;***** 92  /*28*/ END;
FELB21:
	MOV	EAX,[EBP-0cH]
	ADD	ESP,04H
	LEAVE	
	RET	
CDOG	ENDP
@PIT1	DD	OFFSET FLAT: IBMBERPL
	DD	04201H
	DB 	'IBM',0
	DD	04H
	DD	OFFSET FLAT: @PIT_NAME1
	DD	0cH
	DB	0H
	DB	0H
	DB	0
	DB	0
	DD	0
	DD	0
@PIT_NAME1	DB	'CDOG',0
CEECODE	ENDS
CEL3	SEGMENT
	DD	OFFSET CEECODE: CDOG
	DD	OFFSET CEECODE: @PIT1
CEL3	ENDS
CEECODE	SEGMENT

;***** 11  /*0*/ DOGSPEAK: PROC(this) ;
	ALIGN 04H

DOGSPEAK	PROC
	PUSH	EBP
	MOV	EBP,ESP
	SUB	ESP,0c8H
	PUSH	EBX
	PUSH	EDI
	PUSH	ESI
	SUB	ESP,0cH
	MOV	[EBP+08H],EAX;	_@THIS

;***** 13  /*0*/ DCL varThis PTR INIT(this);
	MOV	EAX,[EBP+08H];	_@THIS
	MOV	EAX,[EAX]
	MOV	[EBP-0acH],EAX;	VARTHIS

;***** 14  /*0*/ DO WHILE(varThis->varStruct.className ^= 'DOG');
	ALIGN 04H
FELB23:
FELB24:
	MOV	EAX,[EBP-0acH];	VARTHIS
	MOV	[EBP-0b0H],EAX;	_UNNAMED37
	PUSH	03H
	MOV	ECX,OFFSET FLAT:@CONSd
	MOV	EAX,[EBP-0b0H];	_UNNAMED37
	XOR	EDX,EDX
	MOV	DX,[EAX]
	MOV	EAX,[EBP-0b0H];	_UNNAMED37
	ADD	EAX,02H
	SUB	ESP,0cH
	CALL	_IBMPBCCA
	ADD	ESP,010H
	OR	EAX,EAX
	JE	SHORT FELB25
FELB26:

;***** 15  /*0*/   varThis = varThis->varStruct.pNext;
	MOV	EAX,[EBP-0acH];	VARTHIS
	MOV	EAX,[EAX+04eH]
	MOV	[EBP-0acH],EAX;	VARTHIS

;***** 16  /*0*/ END;
	JMP	SHORT FELB24
	ALIGN 04H
FELB25:

;***** 17  /*24*/ CALL
	MOV	EAX,[EBP+08H];	_@THIS
	MOV	EAX,[EAX]
	MOV	[EBP-054H],EAX;	_UNNAMED17
	MOV	DWORD PTR [EBP-0b8H],0H;	_UNNAMED40
	MOV	EAX,DWORD PTR  @CONS4
	MOV	[EBP-0c0H],EAX;	_UNNAMED42
	MOV	AL,BYTE PTR  @CONS4+04H
	MOV	[EBP-0bcH],AL;	_UNNAMED42
	MOV	DWORD PTR [EBP-0b4H],OFFSET FLAT:@2b_Dsc0000000001;	_UNNAMED40
	MOV	ESI,OFFSET FLAT:@CONS3
	LEA	EDI,[EBP-026H];	_UNNAMED15
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H
	MOV	DWORD PTR [EBP-0c8H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED45
	LEA	EAX,[EBP-04eH];	_UNNAMED16
	MOV	ECX,DWORD PTR  @CONSe
	MOV	[EAX],ECX
	MOV	ECX,DWORD PTR  @CONSe+04H
	MOV	[EAX+04H],ECX
	MOV	WORD PTR [EAX-02H],08H
	MOV	DWORD PTR [EBP-0c4H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED45
	LEA	ECX,[EBP-0c8H];	_UNNAMED45
	LEA	EDX,[EBP-050H];	_UNNAMED16
	LEA	EAX,[EBP-028H];	_UNNAMED15
	CALL	CANIMAL
	MOV	EBX,EAX
	PUSH	DWORD PTR [EBX+04H]
	LEA	ECX,[EBP-0b8H];	_UNNAMED40
	LEA	EDX,[EBP-0c0H];	_UNNAMED42
	LEA	EAX,[EBP-054H];	_UNNAMED17
	CALL	DWORD PTR [EBX]

;***** 18  /*0*/ CANIMAL('ANIMAL',
;***** 19  /*0*/ 'SETSOUND')->entryStruct.callEntry(
;***** 20  /*0*/ (THIS)
;***** 21  /*0*/ ,'Wuff!'
;***** 22  /*0*/ )
;***** 23  /*24*/ ;
;***** 24  /*25*/ CALL
	MOV	EAX,[EBP+08H];	_@THIS
	MOV	EAX,[EAX]
	MOV	[EBP-0a8H],EAX;	_UNNAMED20
	MOV	ESI,OFFSET FLAT:@CONS3
	LEA	EDI,[EBP-07aH];	_UNNAMED18
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H
	MOV	DWORD PTR [EBP-0c8H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED45
	MOV	ESI,OFFSET FLAT:@CONS11
	LEA	EDI,[EBP-0a2H];	_UNNAMED19
	MOVSD	
	MOVSB	
	SUB	EDI,05H
	MOV	WORD PTR [EDI-02H],05H
	MOV	DWORD PTR [EBP-0c4H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED45
	LEA	ECX,[EBP-0c8H];	_UNNAMED45
	LEA	EDX,[EBP-0a4H];	_UNNAMED19
	LEA	EAX,[EBP-07cH];	_UNNAMED18
	CALL	CANIMAL
	MOV	EDX,EAX
	PUSH	DWORD PTR [EDX+04H]
	LEA	EAX,[EBP-0a8H];	_UNNAMED20
	CALL	DWORD PTR [EDX]

;***** 25  /*0*/ CANIMAL('ANIMAL',
;***** 26  /*0*/ 'SPEAK')->entryStruct.callEntry(
;***** 27  /*0*/ (THIS)
;***** 28  /*0*/ )
;***** 29  /*25*/ ;
;***** 30  /*26*/ END;
	ADD	ESP,0cH
	POP	ESI
	POP	EDI
	POP	EBX
	LEAVE	
	RET	
DOGSPEAK	ENDP
@PIT2	DD	OFFSET FLAT: IBMBERPL
	DD	07a00H
	DB 	'IBM',0
	DD	0fffffffcH
	DD	OFFSET FLAT: @PIT_NAME2
	DD	0c8H
	DB	0H
	DB	0H
	DB	0
	DB	0
	DD	0
	DD	0
@PIT_NAME2	DB	'DOGSPEAK',0
CEECODE	ENDS
CEL3	SEGMENT
	DD	OFFSET CEECODE: DOGSPEAK
	DD	OFFSET CEECODE: @PIT2
CEL3	ENDS
CEECODE	SEGMENT

;***** 32  /*0*/ DOGCDOG: PROC(this);
	ALIGN 04H

DOGCDOG	PROC
	PUSH	EBP
	MOV	EBP,ESP
	SUB	ESP,06cH
	PUSH	EDI
	PUSH	ESI
	SUB	ESP,0cH
	MOV	[EBP+08H],EAX;	_@THIS

;***** 35  /*0*/ varThis = this;
	MOV	EAX,[EBP+08H];	_@THIS
	MOV	EAX,[EAX]
	MOV	[EBP-058H],EAX;	VARTHIS

;***** 36  /*0*/ DO WHILE(varThis->varStruct.pNext ^= NULL());
	ALIGN 04H
FELB27:
FELB28:
	MOV	EAX,[EBP-058H];	VARTHIS
	CMP	DWORD PTR [EAX+04eH],0H
	JE	SHORT FELB29
FELB30:

;***** 37  /*0*/  varThis = varThis->varStruct.pNext;
	MOV	EAX,[EBP-058H];	VARTHIS
	MOV	EAX,[EAX+04eH]
	MOV	[EBP-058H],EAX;	VARTHIS

;***** 38  /*0*/ END;
	JMP	SHORT FELB28
	ALIGN 04H
FELB29:

;***** 39  /*0*/ IF varThis->varStruct.className ^= 'DOG' THEN
	MOV	EAX,[EBP-058H];	VARTHIS
	MOV	[EBP-05cH],EAX;	_UNNAMED52
	PUSH	03H
	MOV	ECX,OFFSET FLAT:@CONSd
	MOV	EAX,[EBP-05cH];	_UNNAMED52
	XOR	EDX,EDX
	MOV	DX,[EAX]
	MOV	EAX,[EBP-05cH];	_UNNAMED52
	ADD	EAX,02H
	SUB	ESP,0cH
	CALL	_IBMPBCCA
	ADD	ESP,010H
	OR	EAX,EAX
	JE	SHORT FELB31
FELB32:

;***** 40  /*0*/ DO;
	ALIGN 04H
FELB33:

;***** 41  /*0*/  ALLOCATE varStruct SET (varThis->varStruct.pNext);
	MOV	EAX,[EBP-058H];	VARTHIS
	ADD	EAX,04eH
	MOV	[EBP-060H],EAX;	_UNNAMED53
	MOV	EAX,054H
	CALL	_IBMPPGDC
	MOV	[EBP-064H],EAX;	_UNNAMED54
	MOV	EAX,[EBP-060H];	_UNNAMED53
	MOV	ECX,[EBP-064H];	_UNNAMED54
	MOV	[EAX],ECX
	MOV	EAX,[EBP-064H];	_UNNAMED54
	ADD	EAX,02H
	MOV	[EBP-064H],EAX;	_UNNAMED54
	MOV	EAX,[EBP-060H];	_UNNAMED53
	MOV	ECX,[EBP-064H];	_UNNAMED54
	MOV	[EAX],ECX

;***** 42  /*0*/  varThis = varThis->varStruct.pNext;
	MOV	EAX,[EBP-058H];	VARTHIS
	MOV	EAX,[EAX+04eH]
	MOV	[EBP-058H],EAX;	VARTHIS

;***** 43  /*0*/ END;
FELB34:
FELB31:
FELB35:

;***** 44  /*0*/ ALLOCATE DOG SET ( varThis->varStruct.varMem);
	MOV	EAX,[EBP-058H];	VARTHIS
	ADD	EAX,04aH
	MOV	[EBP-064H],EAX;	_UNNAMED54
	MOV	EAX,04H
	CALL	_IBMPPGDC
	MOV	[EBP-060H],EAX;	_UNNAMED53
	MOV	EAX,[EBP-064H];	_UNNAMED54
	MOV	ECX,[EBP-060H];	_UNNAMED53
	MOV	[EAX],ECX

;***** 45  /*0*/ varThis->varStruct.pNext = NULL();
	MOV	EAX,[EBP-058H];	VARTHIS
	MOV	DWORD PTR [EAX+04eH],0H

;***** 46  /*0*/ varThis->varStruct.className = 'DOG';
	MOV	EAX,[EBP-058H];	VARTHIS
	MOV	[EBP-05cH],EAX;	_UNNAMED52
	MOV	EDI,[EBP-05cH];	_UNNAMED52
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONSd
	MOVSW	
	MOVSB	
	SUB	EDI,03H
	MOV	WORD PTR [EDI-02H],03H

;***** 47  /*0*/ varThis->varStruct.superClassName = 'ANIMAL';
	MOV	EAX,[EBP-058H];	VARTHIS
	ADD	EAX,025H
	MOV	[EBP-05cH],EAX;	_UNNAMED52
	MOV	EDI,[EBP-05cH];	_UNNAMED52
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONS3
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H

;***** 48  /*0*/ varThis->varStruct.pNext = NULL();
	MOV	EAX,[EBP-058H];	VARTHIS
	MOV	DWORD PTR [EAX+04eH],0H

;***** 49  /*0*/ CALL
	MOV	EAX,[EBP+08H];	_@THIS
	MOV	EAX,[EAX]
	MOV	[EBP-054H],EAX;	_UNNAMED23
	MOV	ESI,OFFSET FLAT:@CONS3
	LEA	EDI,[EBP-026H];	_UNNAMED21
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H
	MOV	DWORD PTR [EBP-06cH],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED55
	MOV	ESI,OFFSET FLAT:@CONS7
	LEA	EDI,[EBP-04eH];	_UNNAMED22
	MOVSD	
	MOVSW	
	MOVSB	
	SUB	EDI,07H
	MOV	WORD PTR [EDI-02H],07H
	MOV	DWORD PTR [EBP-068H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED55
	LEA	ECX,[EBP-06cH];	_UNNAMED55
	LEA	EDX,[EBP-050H];	_UNNAMED22
	LEA	EAX,[EBP-028H];	_UNNAMED21
	CALL	CANIMAL
	MOV	EDX,EAX
	PUSH	DWORD PTR [EDX+04H]
	LEA	EAX,[EBP-054H];	_UNNAMED23
	CALL	DWORD PTR [EDX]

;***** 50  /*0*/ CANIMAL('ANIMAL',
;***** 51  /*0*/ 'CANIMAL')->entryStruct.callEntry(
;***** 52  /*0*/ (THIS)
;***** 53  /*0*/ )
;***** 54  /*0*/ ;
;***** 55  /*0*/ END;
	ADD	ESP,0cH
	POP	ESI
	POP	EDI
	LEAVE	
	RET	
DOGCDOG	ENDP
@PIT3	DD	OFFSET FLAT: IBMBERPL
	DD	07200H
	DB 	'IBM',0
	DD	0fffffffcH
	DD	OFFSET FLAT: @PIT_NAME3
	DD	06cH
	DB	0H
	DB	0H
	DB	0
	DB	0
	DD	0
	DD	0
@PIT_NAME3	DB	'DOGCDOG',0
CEECODE	ENDS
CEL3	SEGMENT
	DD	OFFSET CEECODE: DOGCDOG
	DD	OFFSET CEECODE: @PIT3
CEL3	ENDS
CEECODE	SEGMENT

;***** 70  /*0*/ SetupMethodTable: PROC;
	ALIGN 04H

SETUPMETHODTABLE	PROC
	PUSH	EBP
	MOV	EBP,ESP
	SUB	ESP,014H
	PUSH	EDI
	PUSH	ESI

;***** 71  /*0*/ oopliMethodTable(1).className='DOG';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@39OOPLIMETHODTABLE;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONSd
	MOVSW	
	MOVSB	
	SUB	EDI,03H
	MOV	WORD PTR [EDI-02H],03H

;***** 72  /*0*/ oopliMethodTable(1).superClassName='ANIMAL';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@39OOPLIMETHODTABLE+025H;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONS3
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H

;***** 73  /*0*/ oopliMethodTable(1).methodName='SPEAK';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@39OOPLIMETHODTABLE+04aH;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONS11
	MOVSD	
	MOVSB	
	SUB	EDI,05H
	MOV	WORD PTR [EDI-02H],05H

;***** 74  /*0*/ oopliMethodTable(1).methodCallEntry= DOGSPEAK;
	MOV	EAX,OFFSET FLAT: DOGSPEAK
	MOV	DWORD PTR  @39OOPLIMETHODTABLE+070H,EAX
	MOV	EAX,[EBP+08H]
	MOV	DWORD PTR  @39OOPLIMETHODTABLE+074H,EAX

;***** 75  /*0*/ oopliMethodTable(1).functionCall= '0'B;
	MOV	DWORD PTR [EBP-08H],0H;	_UNNAMED69
	MOV	EAX,[EBP-08H];	_UNNAMED69
	AND	EAX,07H
	MOV	[EBP-09H],AL;	_UNNAMED70
	MOV	EAX,[EBP-08H];	_UNNAMED69
	SHR	EAX,03H
	ADD	EAX,OFFSET FLAT:@39OOPLIMETHODTABLE+06fH
	MOV	[EBP-04H],EAX;	_UNNAMED60
	MOV	CL,[EBP-09H];	_UNNAMED70
	MOV	AL,080H
	SHR	AL,CL
	MOV	ECX,EAX
	NOT	CL
	MOV	EAX,[EBP-04H];	_UNNAMED60
	AND	CL,[EAX]
	MOV	EAX,[EBP-04H];	_UNNAMED60
	MOV	[EAX],CL

;***** 76  /*0*/ oopliMethodTable(2).className='DOG';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@39OOPLIMETHODTABLE+080H;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONSd
	MOVSW	
	MOVSB	
	SUB	EDI,03H
	MOV	WORD PTR [EDI-02H],03H

;***** 77  /*0*/ oopliMethodTable(2).superClassName='ANIMAL';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@39OOPLIMETHODTABLE+0a5H;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONS3
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H

;***** 78  /*0*/ oopliMethodTable(2).methodName='CDOG';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@39OOPLIMETHODTABLE+0caH;	_UNNAMED60
	MOV	EAX,[EBP-04H];	_UNNAMED60
	ADD	EAX,02H
	MOV	ECX,DWORD PTR  @CONS10
	MOV	[EAX],ECX
	MOV	WORD PTR [EAX-02H],04H

;***** 79  /*0*/ oopliMethodTable(2).methodCallEntry= DOGCDOG;
	MOV	EAX,OFFSET FLAT: DOGCDOG
	MOV	DWORD PTR  @39OOPLIMETHODTABLE+0f0H,EAX
	MOV	EAX,[EBP+08H]
	MOV	DWORD PTR  @39OOPLIMETHODTABLE+0f4H,EAX

;***** 80  /*0*/ oopliMethodTable(2).functionCall= '0'B;
	MOV	DWORD PTR [EBP-08H],0400H;	_UNNAMED69
	MOV	EAX,[EBP-08H];	_UNNAMED69
	AND	EAX,07H
	MOV	[EBP-09H],AL;	_UNNAMED70
	MOV	EAX,[EBP-08H];	_UNNAMED69
	SHR	EAX,03H
	ADD	EAX,OFFSET FLAT:@39OOPLIMETHODTABLE+06fH
	MOV	[EBP-04H],EAX;	_UNNAMED60
	MOV	CL,[EBP-09H];	_UNNAMED70
	MOV	AL,080H
	SHR	AL,CL
	MOV	ECX,EAX
	NOT	CL
	MOV	EAX,[EBP-04H];	_UNNAMED60
	AND	CL,[EAX]
	MOV	EAX,[EBP-04H];	_UNNAMED60
	MOV	[EAX],CL

;***** 81  /*0*/ oopliClassTable(1).className='ANIMAL';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@48OOPLICLASSTABLE+01H;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONS3
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H

;***** 82  /*0*/ oopliClassTable(1).superClassName='';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@48OOPLICLASSTABLE+026H;	_UNNAMED60
	MOV	EAX,[EBP-04H];	_UNNAMED60
	MOV	WORD PTR [EAX],0H

;***** 83  /*0*/ oopliClassTable(1).fExternal = '1'B;
	MOV	DWORD PTR [EBP-08H],0H;	_UNNAMED69
	MOV	EAX,[EBP-08H];	_UNNAMED69
	AND	EAX,07H
	MOV	[EBP-09H],AL;	_UNNAMED70
	MOV	EAX,[EBP-08H];	_UNNAMED69
	SHR	EAX,03H
	ADD	EAX,OFFSET FLAT:@48OOPLICLASSTABLE+04bH
	MOV	[EBP-04H],EAX;	_UNNAMED60
	MOV	CL,[EBP-09H];	_UNNAMED70
	MOV	AL,080H
	SHR	AL,CL
	MOV	ECX,EAX
	MOV	EAX,[EBP-04H];	_UNNAMED60
	OR	CL,[EAX]
	MOV	EAX,[EBP-04H];	_UNNAMED60
	MOV	[EAX],CL

;***** 84  /*0*/ oopliClassTable(1).classEntry = CANIMAL;
	MOV	DWORD PTR [EBP-014H],OFFSET FLAT: CANIMAL;	_UNNAMED81
	MOV	DWORD PTR [EBP-010H],0H;	_UNNAMED81
	MOV	EAX,[EBP-014H];	_UNNAMED81
	MOV	DWORD PTR  @48OOPLICLASSTABLE+04cH,EAX
	MOV	EAX,[EBP-010H];	_UNNAMED81
	MOV	DWORD PTR  @48OOPLICLASSTABLE+050H,EAX

;***** 85  /*0*/ oopliClassTable(2).className='DOG';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@48OOPLICLASSTABLE+055H;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONSd
	MOVSW	
	MOVSB	
	SUB	EDI,03H
	MOV	WORD PTR [EDI-02H],03H

;***** 86  /*0*/ oopliClassTable(2).superClassName='ANIMAL';
	MOV	DWORD PTR [EBP-04H],OFFSET FLAT:@48OOPLICLASSTABLE+07aH;	_UNNAMED60
	MOV	EDI,[EBP-04H];	_UNNAMED60
	ADD	EDI,02H
	MOV	ESI,OFFSET FLAT:@CONS3
	MOVSD	
	MOVSW	
	SUB	EDI,06H
	MOV	WORD PTR [EDI-02H],06H

;***** 87  /*0*/ oopliClassTable(2).fExternal = '0'B;
	MOV	DWORD PTR [EBP-08H],02a0H;	_UNNAMED69
	MOV	EAX,[EBP-08H];	_UNNAMED69
	AND	EAX,07H
	MOV	[EBP-09H],AL;	_UNNAMED70
	MOV	EAX,[EBP-08H];	_UNNAMED69
	SHR	EAX,03H
	ADD	EAX,OFFSET FLAT:@48OOPLICLASSTABLE+04bH
	MOV	[EBP-04H],EAX;	_UNNAMED60
	MOV	CL,[EBP-09H];	_UNNAMED70
	MOV	AL,080H
	SHR	AL,CL
	MOV	ECX,EAX
	NOT	CL
	MOV	EAX,[EBP-04H];	_UNNAMED60
	AND	CL,[EAX]
	MOV	EAX,[EBP-04H];	_UNNAMED60
	MOV	[EAX],CL

;***** 88  /*0*/ END;
	POP	ESI
	POP	EDI
	LEAVE	
	RET	
SETUPMETHODTABLE	ENDP
@PIT4	DD	OFFSET FLAT: IBMBERPL
	DD	07200H
	DB 	'IBM',0
	DD	0
	DD	OFFSET FLAT: @PIT_NAME4
	DD	014H
	DB	0H
	DB	0H
	DB	0
	DB	0
	DD	0
	DD	0
@PIT_NAME4	DB	'SETUPMETHODTABLE',0
CEECODE	ENDS
CEL3	SEGMENT
	DD	OFFSET CEECODE: SETUPMETHODTABLE
	DD	OFFSET CEECODE: @PIT4
CEL3	ENDS
CEECODE	SEGMENT

;***** 27 
;***** 27 
	ALIGN 04H

OOPLIRESOLVE	PROC
	PUSH	EBP
	MOV	EBP,ESP
	SUB	ESP,0c4H
	PUSH	EDI
	PUSH	ESI
	MOV	[EBP+08H],EAX;	_@INCLASSNAME
	MOV	[EBP+0cH],EDX;	_@INMEMBERNAME
	MOV	[EBP+010H],ECX;	_@desc_List
	MOV	EDX,0H
	MOV	EAX,OFFSET FLAT:@52_UNNAMED82
	SUB	ESP,08H
	CALL	_CEERTX
	ADD	ESP,08H
	MOV	DWORD PTR [EBP-028H],0c0ff3b6eH;	_Sfi
	MOV	DWORD PTR [EBP-024H],0H;	_Sfi
	MOV	WORD PTR [EBP-020H],01cH;	_Sfi
	MOV	BYTE PTR [EBP-01eH],02H;	_Sfi
	MOV	BYTE PTR [EBP-0cH],0bH;	_Sfi
	MOV	BYTE PTR [EBP-0bH],0H;	_Sfi

;***** 33 
;***** 33 
	MOV	WORD PTR [EBP-051H],0H;	SUPERCLASS

;***** 34 
;***** 34 
	MOV	BYTE PTR [EBP-052H],0H;	FERROR

;***** 35 
;***** 35 
	MOV	BYTE PTR [EBP-053H],0H;	FFOUND

;***** 36 
;***** 36 
	MOV	BYTE PTR [EBP-054H],0H;	FCLASSFOUND

;***** 37 
;***** 37 
;***** 38 
;***** 38 
;***** 39 
;***** 39 
;***** 40 
;***** 40 
	MOV	BYTE PTR [EBP-0bH],011H;	_Sfi
	MOV	EAX,OFFSET FLAT: _UNNAMED6
	MOV	[EBP-08H],EAX;	_Sfi
	MOV	[EBP-04H],EBP;	_Sfi

;***** 41 
;***** 41 
;***** 42 
;***** 42 
;***** 43 
;***** 43 
;***** 44 
;***** 44 
;***** 45 
;***** 45 
;***** 46 
;***** 46 
;***** 47 
;***** 47 
;***** 48 
;***** 48 
;***** 49 
;***** 49 
;***** 50 
;***** 50 
;***** 51 
;***** 51 
;***** 52 
;***** 52 
;***** 53 
;***** 53 
;***** 54 
;***** 54 
;***** 55 
;***** 55 
;***** 56 
;***** 56 
	MOV	DWORD PTR [EBP-058H],01H;	I

;***** 57 
;***** 57 
	MOV	EAX,[EBP+08H];	_@INCLASSNAME
	MOV	[EBP-084H],EAX;	_UNNAMED90
	MOV	ESI,[EBP-084H];	_UNNAMED90
	ADD	ESI,02H
	LEA	EDI,[EBP-07bH];	CLASSNAME
	MOV	ECX,[EBP-084H];	_UNNAMED90
	XOR	EAX,EAX
	MOV	AX,[ECX]
	MOV	ECX,EAX
	SHR	ECX,02H
	CMP	EDI,ESI
	JBE	SHORT BLBL87
	STD	
	LEA	ESI,DWORD PTR [ESI+EAX-04H]
	LEA	EDI,DWORD PTR [EDI+EAX-04H]
	REP MOVSD	
	ADD	ESI,03H
	ADD	EDI,03H
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	CLD	
	INC	EDI
	JMP	SHORT BLBL88
BLBL87:
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	SUB	EDI,EAX
BLBL88:
	MOV	EAX,[EBP-084H];	_UNNAMED90
	MOV	AX,[EAX]
	MOV	[EDI-02H],AX

;***** 58 
;***** 58 
	MOV	EAX,[EBP+0cH];	_@INMEMBERNAME
	MOV	[EBP-084H],EAX;	_UNNAMED90
	MOV	ESI,[EBP-084H];	_UNNAMED90
	ADD	ESI,02H
	LEA	EDI,[EBP-0a7H];	MEMBERNAME
	MOV	ECX,[EBP-084H];	_UNNAMED90
	XOR	EAX,EAX
	MOV	AX,[ECX]
	MOV	ECX,EAX
	SHR	ECX,02H
	CMP	EDI,ESI
	JBE	SHORT BLBL89
	STD	
	LEA	ESI,DWORD PTR [ESI+EAX-04H]
	LEA	EDI,DWORD PTR [EDI+EAX-04H]
	REP MOVSD	
	ADD	ESI,03H
	ADD	EDI,03H
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	CLD	
	INC	EDI
	JMP	SHORT BLBL90
BLBL89:
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	SUB	EDI,EAX
BLBL90:
	MOV	EAX,[EBP-084H];	_UNNAMED90
	MOV	AX,[EAX]
	MOV	[EDI-02H],AX

;***** 59 
;***** 59 
;***** 60 
;***** 60 
	ALIGN 04H
FELB36:
FELB37:
	TEST	BYTE PTR [EBP-053H],080H;	FFOUND
	JNE	FELB38
	TEST	BYTE PTR [EBP-052H],080H;	FERROR
	JNE	FELB38
FELB39:

;***** 61 
;***** 61 
	MOV	EAX,[EBP-058H];	I
	IMUL	EAX,080H
	ADD	EAX,OFFSET FLAT:@39OOPLIMETHODTABLE-080H
	MOV	[EBP-084H],EAX;	_UNNAMED90
	MOV	ECX,[EBP-084H];	_UNNAMED90
	XOR	EAX,EAX
	MOV	AX,[ECX]
	PUSH	EAX
	MOV	ECX,[EBP-084H];	_UNNAMED90
	ADD	ECX,02H
	XOR	EDX,EDX
	MOV	DX,[EBP-07dH];	CLASSNAME
	LEA	EAX,[EBP-07bH];	CLASSNAME
	SUB	ESP,0cH
	CALL	_IBMPBCCA
	ADD	ESP,010H
	OR	EAX,EAX
	JNE	FELB40
FELB41:

;***** 62 
;***** 62 
	ALIGN 04H
FELB42:

;***** 63 
;***** 63 
	MOV	EAX,[EBP-058H];	I
	IMUL	EAX,080H
	ADD	EAX,OFFSET FLAT:@39OOPLIMETHODTABLE-05bH
	MOV	[EBP-084H],EAX;	_UNNAMED90
	MOV	ESI,[EBP-084H];	_UNNAMED90
	ADD	ESI,02H
	LEA	EDI,[EBP-04fH];	SUPERCLASS
	MOV	ECX,[EBP-084H];	_UNNAMED90
	XOR	EAX,EAX
	MOV	AX,[ECX]
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	SUB	EDI,EAX
	MOV	EAX,[EBP-084H];	_UNNAMED90
	MOV	AX,[EAX]
	MOV	[EDI-02H],AX

;***** 64 
;***** 64 
	MOV	BYTE PTR [EBP-054H],080H;	FCLASSFOUND

;***** 65 
;***** 65 
;***** 66 
;***** 66 
	MOV	EAX,[EBP-058H];	I
	IMUL	EAX,080H
	ADD	EAX,OFFSET FLAT:@39OOPLIMETHODTABLE-036H
	MOV	[EBP-084H],EAX;	_UNNAMED90
	MOV	ECX,[EBP-084H];	_UNNAMED90
	XOR	EAX,EAX
	MOV	AX,[ECX]
	PUSH	EAX
	MOV	ECX,[EBP-084H];	_UNNAMED90
	ADD	ECX,02H
	XOR	EDX,EDX
	MOV	DX,[EBP-0a9H];	MEMBERNAME
	LEA	EAX,[EBP-0a7H];	MEMBERNAME
	SUB	ESP,0cH
	CALL	_IBMPBCCA
	ADD	ESP,010H
	OR	EAX,EAX
	JNE	FELB43
FELB44:

;***** 67 
;***** 67 
	ALIGN 04H
FELB45:

;***** 68 
;***** 68 
	MOV	BYTE PTR [EBP-053H],080H;	FFOUND

;***** 69 
;***** 69 
	MOV	EAX,[EBP-058H];	I
	SAL	EAX,0aH
	SUB	EAX,0400H
	MOV	[EBP-0b0H],EAX;	_UNNAMED93
	MOV	EAX,[EBP-0b0H];	_UNNAMED93
	AND	EAX,07H
	MOV	[EBP-0b1H],AL;	_UNNAMED94
	MOV	EAX,[EBP-0b0H];	_UNNAMED93
	SHR	EAX,03H
	MOV	AL,BYTE PTR [EAX+ @39OOPLIMETHODTABLE+06fH]
	MOV	CL,[EBP-0b1H];	_UNNAMED94
	SAL	AL,CL
	TEST	AL,080H
	JE	SHORT FELB46
FELB47:

;***** 70 
;***** 70 
	MOV	EAX,DWORD PTR  @1ePENTRYSTRUCT
	MOV	EDX,[EBP-058H];	I
	IMUL	EDX,080H
	MOV	ECX,DWORD PTR [EDX+ @39OOPLIMETHODTABLE-08H]
	MOV	[EAX+08H],ECX
	MOV	ECX,DWORD PTR [EDX+ @39OOPLIMETHODTABLE-04H]
	MOV	[EAX+0cH],ECX
	JMP	SHORT FELB48
	ALIGN 04H

;***** 71 
;***** 71 
;***** 72 
;***** 72 
FELB46:

;***** 73 
;***** 73 
	MOV	EAX,DWORD PTR  @1ePENTRYSTRUCT
	MOV	EDX,[EBP-058H];	I
	IMUL	EDX,080H
	MOV	ECX,DWORD PTR [EDX+ @39OOPLIMETHODTABLE-010H]
	MOV	[EAX],ECX
	MOV	ECX,DWORD PTR [EDX+ @39OOPLIMETHODTABLE-0cH]
	MOV	[EAX+04H],ECX
FELB48:

;***** 74 
;***** 74 
;***** 75 
;***** 75 
FELB49:
FELB43:
FELB50:

;***** 76 
;***** 76 
FELB51:
FELB40:
FELB52:

;***** 77 
;***** 77 
;***** 78 
;***** 78 
	MOV	EAX,[EBP-058H];	I
	INC	EAX
	JNO	SHORT BLBL91
	CALL	_IBMPERFO
BLBL91:
	MOV	[EBP-058H],EAX;	I

;***** 79 
;***** 79 
	MOV	EAX,DWORD PTR  @61OOPLIMETHODCOUNT
	CMP	[EBP-058H],EAX;	I
	JLE	FELB53
FELB54:

;***** 80 
;***** 80 
	ALIGN 04H
FELB55:

;***** 81 
;***** 81 
	TEST	BYTE PTR [EBP-054H],080H;	FCLASSFOUND
	JNE	FELB56
FELB57:

;***** 82 
;***** 82 
	ALIGN 04H
FELB58:

;***** 83 
;***** 83 
	MOV	EAX,DWORD PTR  @62OOPLICLASSCOUNT
	MOV	[EBP-02cH],EAX;	_UNNAMED25
	MOV	DWORD PTR [EBP-0b8H],01H;	J
	ALIGN 04H
FELB59:
	MOV	EAX,[EBP-02cH];	_UNNAMED25
	CMP	[EBP-0b8H],EAX;	J
	JG	FELB60
FELB61:

;***** 84 
;***** 84 
	MOV	EAX,[EBP-0b8H];	J
	IMUL	EAX,054H
	ADD	EAX,OFFSET FLAT:@48OOPLICLASSTABLE-053H
	MOV	[EBP-084H],EAX;	_UNNAMED90
	MOV	ECX,[EBP-084H];	_UNNAMED90
	XOR	EAX,EAX
	MOV	AX,[ECX]
	PUSH	EAX
	MOV	ECX,[EBP-084H];	_UNNAMED90
	ADD	ECX,02H
	XOR	EDX,EDX
	MOV	DX,[EBP-07dH];	CLASSNAME
	LEA	EAX,[EBP-07bH];	CLASSNAME
	SUB	ESP,0cH
	CALL	_IBMPBCCA
	ADD	ESP,010H
	OR	EAX,EAX
	JNE	FELB62
FELB63:

;***** 85 
;***** 85 
	ALIGN 04H
FELB64:

;***** 86 
;***** 86 
	MOV	EAX,[EBP-0b8H];	J
	IMUL	EAX,054H
	ADD	EAX,OFFSET FLAT:@48OOPLICLASSTABLE-02eH
	MOV	[EBP-084H],EAX;	_UNNAMED90
	MOV	ESI,[EBP-084H];	_UNNAMED90
	ADD	ESI,02H
	LEA	EDI,[EBP-04fH];	SUPERCLASS
	MOV	ECX,[EBP-084H];	_UNNAMED90
	XOR	EAX,EAX
	MOV	AX,[ECX]
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	SUB	EDI,EAX
	MOV	EAX,[EBP-084H];	_UNNAMED90
	MOV	AX,[EAX]
	MOV	[EDI-02H],AX

;***** 87 
;***** 87 
	MOV	EAX,[EBP-0b8H];	J
	IMUL	EAX,02a0H
	SUB	EAX,02a0H
	MOV	[EBP-0b0H],EAX;	_UNNAMED93
	MOV	EAX,[EBP-0b0H];	_UNNAMED93
	AND	EAX,07H
	MOV	[EBP-0b1H],AL;	_UNNAMED94
	MOV	EAX,[EBP-0b0H];	_UNNAMED93
	SHR	EAX,03H
	MOV	AL,BYTE PTR [EAX+ @48OOPLICLASSTABLE+04bH]
	MOV	CL,[EBP-0b1H];	_UNNAMED94
	SAL	AL,CL
	TEST	AL,080H
	JE	SHORT FELB65
FELB66:

;***** 88 
;***** 88 
	ALIGN 04H
FELB67:

;***** 89 
;***** 89 
	MOV	DWORD PTR [EBP-0c0H],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED100
	MOV	DWORD PTR [EBP-0bcH],OFFSET FLAT:@22_Dsc0000000002;	_UNNAMED100
	MOV	EDI,[EBP-0b8H];	J
	IMUL	EDI,054H
	PUSH	DWORD PTR [EDI+ @48OOPLICLASSTABLE-04H]
	LEA	ECX,[EBP-0c0H];	_UNNAMED100
	LEA	EDX,[EBP-0a9H];	MEMBERNAME
	LEA	EAX,[EBP-07dH];	CLASSNAME
	SUB	ESP,0cH
	CALL	DWORD PTR [EDI+ @48OOPLICLASSTABLE-08H]
	ADD	ESP,0cH
	MOV	DWORD PTR  @1ePENTRYSTRUCT,EAX

;***** 90 
;***** 90 
;***** 91 
;***** 91 
	MOV	BYTE PTR [EBP-053H],080H;	FFOUND

;***** 92 
;***** 92 
FELB68:
FELB65:
FELB69:

;***** 93 
;***** 93 
FELB70:
FELB62:
FELB71:

;***** 94 
;***** 94 
FELB72:
FELB73:
	MOV	EAX,[EBP-0b8H];	J
	INC	EAX
	JNO	SHORT BLBL92
	CALL	_IBMPERFO
BLBL92:
	MOV	[EBP-0b8H],EAX;	J
	JMP	FELB59
	ALIGN 04H
FELB60:

;***** 95 
;***** 95 
FELB74:
FELB56:
FELB75:

;***** 96 
;***** 96 
;***** 97 
;***** 97 
	PUSH	0H
	MOV	ECX,0H
	XOR	EDX,EDX
	MOV	DX,[EBP-051H];	SUPERCLASS
	LEA	EAX,[EBP-04fH];	SUPERCLASS
	SUB	ESP,0cH
	CALL	_IBMPBCCA
	ADD	ESP,010H
	OR	EAX,EAX
	JE	SHORT FELB76
FELB77:

;***** 98 
;***** 98 
	ALIGN 04H
FELB78:

;***** 99 
;***** 99 
	LEA	ESI,[EBP-04fH];	SUPERCLASS
	LEA	EDI,[EBP-07bH];	CLASSNAME
	XOR	EAX,EAX
	MOV	AX,[EBP-051H];	SUPERCLASS
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	SUB	EDI,EAX
	MOV	AX,[EBP-051H];	SUPERCLASS
	MOV	[EDI-02H],AX

;***** 100 
;***** 100 
	MOV	BYTE PTR [EBP-054H],0H;	FCLASSFOUND

;***** 101 
;***** 101 
	MOV	DWORD PTR [EBP-058H],01H;	I

;***** 102 
;***** 102 
FELB79:
	JMP	SHORT FELB80
	ALIGN 04H

;***** 103 
;***** 103 
FELB76:

;***** 104 
;***** 104 
	MOV	BYTE PTR [EBP-052H],080H;	FERROR
FELB80:

;***** 105 
;***** 105 
FELB81:
FELB53:
FELB82:

;***** 106 
;***** 106 
	JMP	FELB37
	ALIGN 04H
FELB38:

;***** 107 
;***** 107 
;***** 108 
;***** 108 
	TEST	BYTE PTR [EBP-053H],080H;	FFOUND
	JE	SHORT FELB83
FELB84:

;***** 109 
;***** 109 
	MOV	EAX,DWORD PTR  @1ePENTRYSTRUCT
	MOV	[EBP-0c4H],EAX;	@CBE93
	JMP	SHORT FELB85
	ALIGN 04H

;***** 110 
;***** 110 
FELB83:

;***** 111 
;***** 111 
	MOV	AL,0bH
	SUB	ESP,04H
	CALL	_IBMPESGU
	ADD	ESP,04H
FELB86:

;***** 112 
;***** 112 
FELB85:
	MOV	EAX,[EBP-0c4H]
	POP	ESI
	POP	EDI
	LEAVE	
	RET	
OOPLIRESOLVE	ENDP
@PIT5	DD	OFFSET FLAT: IBMBERPL
	DD	07200H
	DB 	'IBM',0
	DD	04H
	DD	OFFSET FLAT: @PIT_NAME5
	DD	0c4H
	DB	080H
	DB	01H
	DB	0
	DB	0
	DD	OFFSET FLAT: @7e_Sib
	DD	0
@PIT_NAME5	DB	'OOPLIRESOLVE',0
CEECODE	ENDS
CEL3	SEGMENT
	DD	OFFSET CEECODE: OOPLIRESOLVE
	DD	OFFSET CEECODE: @PIT5
CEL3	ENDS
CEECODE	SEGMENT
	ALIGN 04H

_UNNAMED6	PROC
	PUSH	EBP
	MOV	EBP,ESP
	SUB	ESP,0e0H
	PUSH	EDI
	PUSH	ESI
	MOV	DWORD PTR [EBP-0dcH],0H;	_Dyn_Size
	MOV	EAX,[EBP+08H]
	MOV	EAX,[EAX+014H]
	MOV	[EBP-0e0H],EAX
	MOV	EDX,0H
	MOV	EAX,OFFSET FLAT:@52_UNNAMED82
	SUB	ESP,08H
	CALL	_CEERTX
	ADD	ESP,08H
	MOV	DWORD PTR [EBP-028H],0c0ff3b6eH;	_Sfi
	MOV	DWORD PTR [EBP-024H],0H;	_Sfi
	MOV	WORD PTR [EBP-020H],01cH;	_Sfi
	MOV	BYTE PTR [EBP-01eH],03H;	_Sfi
	MOV	BYTE PTR [EBP-0cH],0bH;	_Sfi
	MOV	BYTE PTR [EBP-0bH],0H;	_Sfi

;***** 42      ON ERROR SYSTEM;
	MOV	BYTE PTR [EBP-0bH],090H;	_Sfi

;***** 43      dcl i bin fixed(31);
;***** 44 
;***** 45      PUT SKIP LIST('could not find method >' || memberName
	LEA	EAX,[EBP-0a4H];	_UNNAMED105
	MOV	[EBP-034H],EAX;	_UNNAMED104
	MOV	AX,WORD PTR  @CONS8
	MOV	[EBP-078H],AX;	_UNNAMED105
	MOV	EAX,DWORD PTR  @6bSYSPRINT
	MOV	[EBP-038H],EAX;	_UNNAMED104
	MOV	DWORD PTR [EBP-0a4H],01H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	EDX,[ECX]
	CALL	DWORD PTR [EDX+024H]
	ADD	ESP,04H
	MOV	EDX,[EBP+08H]
	XOR	EAX,EAX
	MOV	AX,[EDX-0a9H];	MEMBERNAME
	ADD	EAX,017H
	MOV	[EBP-0a8H],EAX;	_UNNAMED112
	MOV	EAX,[EBP-0a8H];	_UNNAMED112
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0acH],ESP;	_UNNAMED113
	MOV	EDI,[EBP-0acH];	_UNNAMED113
	ADD	EDI,017H
	LEA	ESI,[EDX-0a7H];	MEMBERNAME
	XOR	EAX,EAX
	MOV	AX,[EDX-0a9H];	MEMBERNAME
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	ESI,OFFSET FLAT:@CONSb
	MOV	EDI,[EBP-0acH];	_UNNAMED113
	MOV	ECX,05H
	REP MOVSD	
	MOVSW	
	MOVSB	
	MOV	EAX,[EBP-0a8H];	_UNNAMED112
	ADD	EAX,0cH
	MOV	[EBP-0b0H],EAX;	_UNNAMED114
	MOV	EAX,[EBP-0b0H];	_UNNAMED114
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0b4H],ESP;	_UNNAMED115
	MOV	EDI,[EBP-0b4H];	_UNNAMED115
	MOV	EAX,[EBP-0a8H];	_UNNAMED112
	ADD	EDI,EAX
	MOV	ESI,OFFSET FLAT:@CONSc
	MOV	ECX,03H
	REP MOVSD	
	MOV	ESI,[EBP-0acH];	_UNNAMED113
	MOV	EDI,[EBP-0b4H];	_UNNAMED115
	MOV	EAX,[EBP-0a8H];	_UNNAMED112
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	ECX,EDX
	XOR	EAX,EAX
	MOV	AX,[ECX-07dH];	CLASSNAME
	ADD	EAX,[EBP-0b0H];	_UNNAMED114
	MOV	[EBP-0b8H],EAX;	_UNNAMED116
	MOV	EAX,[EBP-0b8H];	_UNNAMED116
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0bcH],ESP;	_UNNAMED117
	MOV	EDI,[EBP-0bcH];	_UNNAMED117
	MOV	EAX,[EBP-0b0H];	_UNNAMED114
	ADD	EDI,EAX
	LEA	ESI,[ECX-07bH];	CLASSNAME
	XOR	EAX,EAX
	MOV	AX,[ECX-07dH];	CLASSNAME
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	ESI,[EBP-0b4H];	_UNNAMED115
	MOV	EDI,[EBP-0bcH];	_UNNAMED117
	MOV	EAX,[EBP-0b0H];	_UNNAMED114
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	EAX,[EBP-0b8H];	_UNNAMED116
	INC	EAX
	MOV	[EBP-0c0H],EAX;	_UNNAMED118
	MOV	EAX,[EBP-0c0H];	_UNNAMED118
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0c4H],ESP;	_UNNAMED119
	MOV	EAX,[EBP-0c4H];	_UNNAMED119
	MOV	ECX,[EBP-0b8H];	_UNNAMED116
	ADD	EAX,ECX
	MOV	CL,BYTE PTR  @CONS5
	MOV	[EAX],CL
	MOV	ESI,[EBP-0bcH];	_UNNAMED117
	MOV	EDI,[EBP-0c4H];	_UNNAMED119
	MOV	EAX,[EBP-0b8H];	_UNNAMED116
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	EAX,DWORD PTR  @CONS1
	MOV	[EBP-0ccH],EAX;	_UNNAMED120
	MOV	EAX,[EBP-0c0H];	_UNNAMED118
	MOV	[EBP-0c8H],EAX;	_UNNAMED120
	LEA	EAX,[EBP-0ccH];	_UNNAMED120
	MOV	[EBP-088H],EAX;	_UNNAMED105
	MOV	DWORD PTR [EBP-08cH],OFFSET FLAT:@CONS2;	_UNNAMED105
	MOV	EAX,[EBP-0c4H];	_UNNAMED119
	MOV	[EBP-090H],EAX;	_UNNAMED105
	MOV	WORD PTR [EBP-076H],0H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	EDX,[ECX]
	CALL	DWORD PTR [EDX+044H]
	ADD	ESP,04H
	CMP	BYTE PTR [EBP-074H],0H;	_UNNAMED105
	JE	SHORT FELB94
	MOV	WORD PTR [EBP-076H],01H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	EDX,[ECX]
	CALL	DWORD PTR [EDX+044H]
	ADD	ESP,04H
FELB94:

;***** 46                    || '< in class >' || className || '<');
;***** 47      put skip list(oopliMethodCount);
	LEA	EAX,[EBP-0a4H];	_UNNAMED105
	MOV	[EBP-034H],EAX;	_UNNAMED104
	MOV	AX,WORD PTR  @CONS8
	MOV	[EBP-078H],AX;	_UNNAMED105
	MOV	EAX,DWORD PTR  @6bSYSPRINT
	MOV	[EBP-038H],EAX;	_UNNAMED104
	MOV	DWORD PTR [EBP-0a4H],01H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	ESI,[ECX]
	CALL	DWORD PTR [ESI+024H]
	ADD	ESP,04H
	MOV	DWORD PTR [EBP-08cH],OFFSET FLAT:@CONSa;	_UNNAMED105
	MOV	DWORD PTR [EBP-090H],OFFSET FLAT:@61OOPLIMETHODCOUNT;	_UNNAMED105
	MOV	WORD PTR [EBP-076H],0H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	ESI,[ECX]
	CALL	DWORD PTR [ESI+044H]
	ADD	ESP,04H
	CMP	BYTE PTR [EBP-074H],0H;	_UNNAMED105
	JE	SHORT FELB95
	MOV	WORD PTR [EBP-076H],01H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	ESI,[ECX]
	CALL	DWORD PTR [ESI+044H]
	ADD	ESP,04H
FELB95:

;***** 48      do i = 1 to oopliMethodCount;
	MOV	EAX,DWORD PTR  @61OOPLIMETHODCOUNT
	MOV	[EBP-02cH],EAX;	_UNNAMED27
	MOV	DWORD PTR [EBP-0d0H],01H;	I
	ALIGN 04H
FELB96:
	MOV	EAX,[EBP-02cH];	_UNNAMED27
	CMP	[EBP-0d0H],EAX;	I
	JG	FELB97
FELB98:

;***** 49       put skip list(i,'>' ||oopliMethodTable(i).className
	LEA	EAX,[EBP-0a4H];	_UNNAMED105
	MOV	[EBP-034H],EAX;	_UNNAMED104
	MOV	AX,WORD PTR  @CONS8
	MOV	[EBP-078H],AX;	_UNNAMED105
	MOV	EAX,DWORD PTR  @6bSYSPRINT
	MOV	[EBP-038H],EAX;	_UNNAMED104
	MOV	DWORD PTR [EBP-0a4H],01H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	ESI,[ECX]
	CALL	DWORD PTR [ESI+024H]
	ADD	ESP,04H
	MOV	DWORD PTR [EBP-08cH],OFFSET FLAT:@CONSa;	_UNNAMED105
	LEA	EAX,[EBP-0d0H];	I
	MOV	[EBP-090H],EAX;	_UNNAMED105
	MOV	WORD PTR [EBP-076H],0H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	ESI,[ECX]
	CALL	DWORD PTR [ESI+044H]
	ADD	ESP,04H
	CMP	BYTE PTR [EBP-074H],0H;	_UNNAMED105
	JE	FELB99
	MOV	EAX,[EBP-0d0H];	I
	IMUL	EAX,080H
	ADD	EAX,OFFSET FLAT:@39OOPLIMETHODTABLE-080H
	MOV	[EBP-0c4H],EAX;	_UNNAMED119
	MOV	ECX,[EBP-0c4H];	_UNNAMED119
	XOR	EAX,EAX
	MOV	AX,[ECX]
	INC	EAX
	MOV	[EBP-0c0H],EAX;	_UNNAMED118
	MOV	EAX,[EBP-0c0H];	_UNNAMED118
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0bcH],ESP;	_UNNAMED117
	MOV	ESI,[EBP-0c4H];	_UNNAMED119
	ADD	ESI,02H
	MOV	EDI,[EBP-0bcH];	_UNNAMED117
	INC	EDI
	MOV	ECX,[EBP-0c4H];	_UNNAMED119
	XOR	EAX,EAX
	MOV	AX,[ECX]
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	EDI,[EBP-0bcH];	_UNNAMED117
	MOV	AL,BYTE PTR  @CONS6
	MOV	[EDI],AL
	MOV	EAX,[EBP-0c0H];	_UNNAMED118
	ADD	EAX,03H
	MOV	[EBP-0b8H],EAX;	_UNNAMED116
	MOV	EAX,[EBP-0b8H];	_UNNAMED116
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0b4H],ESP;	_UNNAMED115
	MOV	EDI,[EBP-0b4H];	_UNNAMED115
	MOV	EAX,[EBP-0c0H];	_UNNAMED118
	ADD	EDI,EAX
	MOV	ESI,OFFSET FLAT:@CONS9
	MOVSW	
	MOVSB	
	MOV	ESI,[EBP-0bcH];	_UNNAMED117
	MOV	EDI,[EBP-0b4H];	_UNNAMED115
	MOV	EAX,[EBP-0c0H];	_UNNAMED118
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	EAX,[EBP-0d0H];	I
	IMUL	EAX,080H
	ADD	EAX,OFFSET FLAT:@39OOPLIMETHODTABLE-036H
	MOV	[EBP-0acH],EAX;	_UNNAMED113
	MOV	ECX,[EBP-0acH];	_UNNAMED113
	XOR	EAX,EAX
	MOV	AX,[ECX]
	ADD	EAX,[EBP-0b8H];	_UNNAMED116
	MOV	[EBP-0b0H],EAX;	_UNNAMED114
	MOV	EAX,[EBP-0b0H];	_UNNAMED114
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0d4H],ESP;	_UNNAMED122
	MOV	ESI,[EBP-0acH];	_UNNAMED113
	ADD	ESI,02H
	MOV	EDI,[EBP-0d4H];	_UNNAMED122
	MOV	EAX,[EBP-0b8H];	_UNNAMED116
	ADD	EDI,EAX
	MOV	ECX,[EBP-0acH];	_UNNAMED113
	XOR	EAX,EAX
	MOV	AX,[ECX]
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	ESI,[EBP-0b4H];	_UNNAMED115
	MOV	EDI,[EBP-0d4H];	_UNNAMED122
	MOV	EAX,[EBP-0b8H];	_UNNAMED116
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	EAX,[EBP-0b0H];	_UNNAMED114
	INC	EAX
	MOV	[EBP-0a8H],EAX;	_UNNAMED112
	MOV	EAX,[EBP-0a8H];	_UNNAMED112
	ADD	EAX,03H
	AND	EAX,0fffffffcH
	SUB	ESP,EAX
	ADD	[EBP-0dcH],EAX;	_Dyn_Size
	MOV	[EBP-0d8H],ESP;	_UNNAMED123
	MOV	EDI,[EBP-0d8H];	_UNNAMED123
	MOV	EAX,[EBP-0b0H];	_UNNAMED114
	ADD	EDI,EAX
	MOV	AL,BYTE PTR  @CONS5
	MOV	[EDI],AL
	MOV	ESI,[EBP-0d4H];	_UNNAMED122
	MOV	EDI,[EBP-0d8H];	_UNNAMED123
	MOV	EAX,[EBP-0b0H];	_UNNAMED114
	MOV	ECX,EAX
	SHR	ECX,02H
	REP MOVSD	
	MOV	ECX,EAX
	AND	ECX,03H
	REP MOVSB	
	MOV	EAX,DWORD PTR  @CONS1
	MOV	[EBP-0ccH],EAX;	_UNNAMED120
	MOV	EAX,[EBP-0a8H];	_UNNAMED112
	MOV	[EBP-0c8H],EAX;	_UNNAMED120
	LEA	EAX,[EBP-0ccH];	_UNNAMED120
	MOV	[EBP-088H],EAX;	_UNNAMED105
	MOV	DWORD PTR [EBP-08cH],OFFSET FLAT:@CONS2;	_UNNAMED105
	MOV	EAX,[EBP-0d8H];	_UNNAMED123
	MOV	[EBP-090H],EAX;	_UNNAMED105
	MOV	WORD PTR [EBP-076H],0H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	ESI,[ECX]
	CALL	DWORD PTR [ESI+044H]
	ADD	ESP,04H
	CMP	BYTE PTR [EBP-074H],0H;	_UNNAMED105
	JE	SHORT FELB99
	MOV	WORD PTR [EBP-076H],01H;	_UNNAMED105
	LEA	EAX,[EBP-03cH];	_UNNAMED104
	PUSH	EAX
	MOV	AL,01H
	MOV	ECX,[EBP-038H];	_UNNAMED104
	MOV	ECX,[ECX]
	MOV	ECX,[ECX]
	MOV	ESI,[ECX]
	CALL	DWORD PTR [ESI+044H]
	ADD	ESP,04H
FELB99:

;***** 50                  || '< >'||oopliMethodTable(i).methodName
;***** 51                  || '<');
;***** 52      END;
FELB100:
FELB101:
	MOV	EAX,[EBP-0d0H];	I
	INC	EAX
	JNO	SHORT BLBL103
	CALL	_IBMPERFO
BLBL103:
	MOV	[EBP-0d0H],EAX;	I
	JMP	FELB96
	ALIGN 04H
FELB97:

;***** 53      SIGNAL ERROR;
	MOV	AL,0bH
	SUB	ESP,04H
	CALL	_IBMPESGU
	ADD	ESP,04H

;***** 54     END;
	MOV	EDX,0H
	MOV	EAX,OFFSET FLAT:@52_UNNAMED82
	SUB	ESP,08H
	CALL	_CEEUTX
	ADD	ESP,08H
	LEA	ESP,[EBP-0e8H]
	POP	ESI
	POP	EDI
	LEAVE	
	RET	
_UNNAMED6	ENDP
@PIT6	DD	OFFSET FLAT: IBMBERPL
	DD	087600H
	DB 	'IBM',0
	DD	0
	DD	OFFSET FLAT: @PIT_NAME6
	DD	0e0H
	DB	083H
	DB	01H
	DB	0
	DB	0
	DD	OFFSET FLAT: @7f_Sib
	DD	0ffffff24H
@PIT_NAME6	DB	'_UNNAMED6',0
CEECODE	ENDS
CEL3	SEGMENT
	DD	OFFSET CEECODE: _UNNAMED6
	DD	OFFSET CEECODE: @PIT6
CEL3	ENDS
CEECODE	SEGMENT
CEECODE	ENDS
END
